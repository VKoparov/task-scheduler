name: Deploy to Homelab

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Connect to Tailscale
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      # Step 3: Set up SSH access
      - name: Set up SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 4: Deploy to Homelab
      - name: Deploy Application
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "
            # Define paths
            PROJECTS_DIR=${{ secrets.PROJECTS_DIR }}
            SCRIPTS_DIR=${{ secrets.SCRIPTS_DIR }}

            # Get the repository name and navigate to the project location
            REPO_NAME=$(basename -s .git $(git config --get remote.origin.url))
            PROJECT_LOCATION=\$PROJECTS_DIR/\$REPO_NAME
            mkdir -p \$PROJECT_LOCATION
            cd \$PROJECT_LOCATION
          
            # Clone the repository if it doesn't exist
            if [ ! -d \"\$PROJECT_LOCATION/.git\" ]; then
            echo \"Cloning repository...\"
            git clone \$REPO_URL
            else
            echo \"Repository exists. Pulling latest changes...\"
            cd \$PROJECT_LOCATION
            git pull
            fi

            # Create or update the .env file with secrets
            echo \"WEB_URLS='${{ secrets.WEB_URLS }}'\" > .env
            echo \"CRON_TIMEOUT='${{ secrets.CRON_TIMEOUT }}'\" >> .env
            echo \"SENTRY_DSN='${{ secrets.SENTRY_DSN }}'\" >> .env

            # Run the port assignment script
            chmod +x \$SCRIPTS_DIR/deploy.sh
            \$SCRIPTS_DIR/deploy.sh
          "
